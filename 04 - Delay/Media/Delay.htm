<HTML><HEAD><TITLE>Delay</TITLE>
<META Name="description" Content="A detailed discussion of the commonly used delay effect and its variations including slapback, multi-tap, and ping-pong delays, with audio clips to demonstrate them.  We will also look at some details in the analog and digital implementations.">
<META Name="keywords" Content="delay, effect, feedback, multi, tap, ping, pong, slapback">
</HEAD><BODY BGCOLOR="#ffffff">
<H1>Delay</H1>
The delay is one of the simplest effects out there, but it is very valuable when used properly. A little delay can bring life to dull mixes, widen your instrument's sound, and even allow you to solo over yourself. The delay is the also a building block for a number of other effects, such as reverb, chorus, and flanging.
<P>

<H2>The Basic Delay</H2>
Simply put, a delay takes an audio signal, and plays it back after the <B>delay time</B>. The delay time can range from several milliseconds to several seconds. Figure 1 presents the basic delay in a flow-graph form.  This only produces a single copy of the input, and thus is often referred to as an echo device.
<P>
<CENTER>
<IMG SRC="delay-f1.gif" ALT="Diagram of the basic delay" WIDTH=365 HEIGHT=95><P>
<B>Figure 1:</B> Diagram of the basic delay unit, or an echo device.
</CENTER>
<P>
Just having a single echo effect is rather limiting, so most delays also have a <B>feedback</B> control (sometimes called <B>regeneration</B>) which takes the output of the delay, and sends it back to the input, as shown in Figure 2.  Now you have the ability to repeat the sound over and over, and it becomes quieter each time it plays back (assuming that the feedback gain is less than one. Most delay devices restrict it to be less than one for stability). With the feedback, the sound is theoretically repeated forever (at least until you turn the unit off), but after some point, it will become so quiet that it will be below the ambient noise in the system and inaudible. Sound Set 1 presents a variety of delay settings to give you a feel for delay times.
<P>
<CENTER>
<IMG SRC="delay-f2.gif" ALT="Image of the basic delay with feedback" WIDTH=395 HEIGHT=152><BR>
<B>Figure 2:</B> Diagram of the basic delay unit with feedback.
</CENTER>
<P>
<P>
<A HREF="delay-ss1.wav">
<IMG SRC="soundwav1.gif" HEIGHT=40 WIDTH=40 BORDER=1 ALT=".wav file"></A><B>Sound Set 1:</B> Delays applied to a pulse-like sound .You will first hear the pulse, then the same pulse processed with a 60 ms. delay (no feedback), a 100 ms. delay, a 150. ms delay, a 250 ms. delay, a 250 ms. delay with feedback, and finally another 250 ms. delay with a higher feedback gain.<P>
Delays are very useful for filling out an instrument's sound.  Playing through a delay unit with a short echo, say 50 to 100 milliseconds, creates a doubling effect, as though two instruments were being played in unison.  An example of this quality is shown in Sound Set 2.  Using several delays together with feedback can be used to create a reverb-like sound, though a typical reverb unit will create a more complex sound pattern.
<P>
<CENTER>
<TABLE>
</TABLE><P>
<TABLE WIDTH=70%><TR><TD ALIGN=center>
<A HREF="delay-ss2.wav">
<IMG SRC="soundwav1.gif" HEIGHT=40 WIDTH=40 BORDER=1 ALT=".wav file"></A><B>Sound Set 2:</B> A simple guitar riff, followed by the same riff, but with an added delay of 40 ms., doubling the sound.</TD></TR></TABLE>
</CENTER>
<P>

As you increase delay times beyond 100 milliseconds or so, the delay no longer a subtle effect. One interesting possibility is to match the delay time to the tempo of a song so that the delayed copies of the sound fall on the beat.  Extending to very long delay times close to a second or more gives you a chance to play over yourself and develop harmonies even though you may only be playing one note at a time.  Sound Set 3 is a simple example of how you can layer single notes in such a fashion.
<P>
<CENTER>
<P>
<TABLE WIDTH=70%><TR><TD ALIGN=center>
<A HREF="delay-ss3.wav">
<IMG SRC="soundwav1.gif" HEIGHT=40 WIDTH=40 BORDER=1 ALT=".wav file"></A><B>Sound Set 3:</B> You can use a long delay to layer notes. The delay time used here is 1.5 seconds.</TD></TR></TABLE>
</CENTER>
<P>

Looping and sampling are just a short jump away. Instead of repeating everything you play, you can record a segment of your playing, say a chord progression, and then loop it - play the recorded audio over and over.  This lets you go a step further so you can actually solo over yourself when you don't have a rhythm player at your command.  Some delay pedals include sampling capability, though the length of the sample may be limited to two seconds or less.  For serious looping, you will need devices with longer recording times, such as Lexicon's JamMan and the Oberheim Echoplex.   are some of the popular units on the market for looping, and they offer other capabilities over straight looping, such as recording additional sounds onto the sample, playing the loop backwards, as well as recording several different loops while being able to 

<P>
Delays are also very important when building a mix of instruments in a stereo environment. It can enhance stereo placement of instruments, and making the mix sound 'bigger'. A little delay can be more effective than panning for spreading tracks out in the stereo field. Just a simple delay on the order of 20 milliseconds can make a big difference, as demonstrated in Sound Set 4.

<P>
<A HREF="delay-ss4.wav">
<IMG SRC="soundwav1.gif" HEIGHT=40 WIDTH=40 BORDER=1 ALT=".wav file"></A><B>Sound 
Set 4 (Stereo):</B> The same riff from Sound Set 2, initially mixed to the 
center of a stereo mix. This is followed by the same riff with a 20 ms. delay 
between the two channels. There is NO panning involved - just a pure delay with 
no feedback<P>
<CENTER>
<P>
</CENTER>
<P>

<H2>Other Delay Types</H2>
<B>Slapback</B><P>
A slapback delay is not a new algorithm of any sort.  It is the same as the basic delay without feedback discussed in the opening of this article.  A delay is called a slapback delay if the delay time is very short - say between 40 and 120 milliseconds.  A longer delay is often referred to as an echo, rather than a slapback delay.
<P>
<B>Multi-Tap Delay</B><P>
In some cases, you might want more flexibility in a delay unit, and a multi-tap delay offers gives you just this.  Multi-tap delays are interesting because they allow you to create more complex patterns that can add a rhythmic quality to the instrument, as demonstrated in Sound Set 5.
<P>
<CENTER>
<P>
<A HREF="delay-ss5.wav">
<IMG SRC="soundwav1.gif" HEIGHT=40 WIDTH=40 BORDER=1 ALT=".wav file"></A><B>Sound Set 5:</B> A 4-tap delay in action.
</CENTER>
<P>
In the delay units discussed above, the output is taken after the signal has been delayed for the total delay time. But you can also take outputs such that the signal has only been delayed a portion of the total delay time. Taking outputs from points within the delay line is referred to 'tapping' the delay line, much like a tap in a water pipe allows you to get water at points long the pipe. Units are usually labeled with the number of available taps - a 3-tap delay has three taps to use, a 4-tap has 4, etc. Unwanted taps can be removed by setting the tap output level to zero. The amount of delay between the various taps can be different.  A diagram for a multi-tap delay is shown in Figure 3.

<P>
<CENTER>
<IMG SRC="delay-f3.gif" ALT="Image of the flow diagram for a 4-tap delay" WIDTH=644 HEIGHT=228><BR>
<TABLE WIDTH=70%><TR><TD ALIGN=center>
<B>Figure 3:</B> - Flow diagram of a 4-Tap delay.  If the last delay value is zero, and only the fourth tap is used, the system is equivalent to the basic delay.</TD></TR></TABLE>
</CENTER>
<P>
The multi-tap delay is really a more general case of the basic delay design. If you set all but one of the tap gains to zero, and place the remaining tap at the end of the delayline, you then have the basic delay discussed above.  The multi-tap delay could be generalized even further, by allowing feedback from the tap outputs to the beginning of the delay line as well.  You're are unlikely to find this kind of control in products though, primarily because it becomes very easy to create an unstable system.
<P>
It can take a while to understand the multi-tap delay. Notice that if you look only at the output of a single tap, the sound repeats according to the total delay time. The input sound will appear at the tap output before the total delay time (assuming that the tap isn't located at the far right in the diagram). Sound Set 6 takes the 4-tap delay used above and alters somer of the parameters to help you understand how it works.
<P>
<CENTER>
<P>
<TABLE WIDTH=70%><TR><TD ALIGN=center>
<A HREF="delay-ss6.wav">
<IMG SRC="soundwav1.gif" HEIGHT=40 WIDTH=40 BORDER=1 ALT=".wav file"></A><B>Sound Set 6:</B> A sound produced with a 4-tap delay, followed by the same sound with the fourth tap moved 80 ms. closer to the input. The third sound clip uses the first setup, but with an increased total delay time increased by 200 ms. (i.e., Delay 5 in the diagram increased by 200 ms.).</TD></TR></TABLE>
</CENTER>
<P>

<B>Ping-Pong Delay</B><P>

As the name implies, the ping-pong delay produces a bouncing sound, where it's typically bouncing between the left and right channels of a stereo signal.  The ping-pong delay uses two distinct delay lines, each driven by an input (the inputs could be the same signal if desired). Rather than feeding back on themselves however, the output of the delaylines feedback into the other delay line, as shown in Figure 4.  This setup produces two output signals, which when panned hard left and right can create the classic 'bouncing' sound.  Sound Set 7 uses the pulse-like sound used previously to demonstrate the possibilities of a ping-pong delay. 
<CENTER>
<IMG SRC="delay-f4.gif" ALT="Image" WIDTH=465 HEIGHT=267><P>
<B>Figure 4:</B> - Flow diagram of a Ping-Pong delay unit.
</CENTER>
<P>
<CENTER>
<P>
<TABLE WIDTH=70%><TR><TD ALIGN=center>
<A HREF="delay-ss7.wav">
<IMG SRC="soundwav1.gif" HEIGHT=40 WIDTH=40 BORDER=1 ALT=".wav file"></A><B>Sound Set 7 (Stereo):</B> The ping-pong delay.  The first sequence was generated with a symmetric setup (delays of same length, same feedback gain) panned hard left and right. The second sequence breaks this symmetry and panning.</TD></TR></TABLE>
</CENTER>
<P>

<H2>Implementation</H2>
<B>Analog</B><P>
Perhaps the most common audio recording device is magnetic tape, and this works perfectly well for creating delays. You simply record the incoming signal to the tape, and have a playback head at another point on the tape. The delay is the amount of time it takes the recorded signal to travel from the recording head to the playback head. Delays of this type can be adjusted by changing either the tape speed, or the position of the recording and playback heads. To add feedback to a tape based delay, you can simply send some of the output signal from the playback head to the recording head. Multi-tap delays can be made by using additional playback heads.. 
<P>
There are some interesting features in tape based delays that would be difficult to achieve with digital based delays. If you make the feedback gain greater than one, the signal on the tape will grow. This growth will be limited by the capacity of the tape as it is saturates. This sound may not be desirable for all applications, but you could also conceivably vary the feedback gain over time to shape the sound. If the delay has moveable heads, you could also move the heads while it operates, changing the pitch of the recorded or read sounds.<P>

For very short delay times, analog implementations may actually use circuitry made of up 'sample-and-hold' or 'bucket brigade' devices. The desired delay time can be reached by simply cascading enough of these devices together. Using circuitry like this can provide more precise control over the delay time.
<P>

<B>Digital Delay Devices</B><P>
As memory prices have been dropping over the last decade or so, digitally based delays are now cost effective. The actual operation of digital delays is relatively simple. You have a certain amount of memory available and in each sampling interval, you read a previously stored value from a location in memory (a value of the input signal recorded previously), and then you store the current value of the input signal value into a another memory location (in some cases, this location may be the same location that was just read. This is why a value is read before writing). The next sampling period, you read and write to the next location in memory, and when you reach the end of the memory, you loop around to the first memory location. In signal processing, this is called a <B>circular buffer</B>, and it is quite efficient. When programming delays, you typically manipulate a read pointer and a write pointer keep track of where you need to read from and write to memory. These pointers then increment at each step. Multi-tap delays can be created by simply using some additional read pointers.  

</BODY></HTML>